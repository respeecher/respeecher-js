/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Respeecher from "../../../../api/index.js";
import * as core from "../../../../core/index.js";

export const SamplingParams: core.serialization.ObjectSchema<
    serializers.SamplingParams.Raw,
    Respeecher.SamplingParams
> = core.serialization.object({
    seed: core.serialization.number().optional(),
    temperature: core.serialization.number().optional(),
    topK: core.serialization.property("top_k", core.serialization.number().optional()),
    topP: core.serialization.property("top_p", core.serialization.number().optional()),
    minP: core.serialization.property("min_p", core.serialization.number().optional()),
    repetitionPenalty: core.serialization.property("repetition_penalty", core.serialization.number().optional()),
    frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
});

export declare namespace SamplingParams {
    export interface Raw {
        seed?: number | null;
        temperature?: number | null;
        top_k?: number | null;
        top_p?: number | null;
        min_p?: number | null;
        repetition_penalty?: number | null;
        frequency_penalty?: number | null;
    }
}
