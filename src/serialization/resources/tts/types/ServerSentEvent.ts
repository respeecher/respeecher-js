/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Respeecher from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { Chunk } from "./Chunk.js";
import { Error_ } from "./Error_.js";

export const ServerSentEvent: core.serialization.Schema<
    serializers.tts.ServerSentEvent.Raw,
    Respeecher.tts.ServerSentEvent
> = core.serialization
    .union("type", {
        chunk: Chunk,
        error: Error_,
    })
    .transform<Respeecher.tts.ServerSentEvent>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ServerSentEvent {
    export type Raw = ServerSentEvent.Chunk | ServerSentEvent.Error;

    export interface Chunk extends Chunk.Raw {
        type: "chunk";
    }

    export interface Error extends Error_.Raw {
        type: "error";
    }
}
